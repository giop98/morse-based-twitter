/* Running the following example:
 * just call goil a first time using the command line:
 * goil --target=avr/arduino/uno --templates=../../../../goil/templates/ blink.oil
 * you may have to update ARDUINO section (l.13) for your configuration.
 *
 */

OIL_VERSION = "2.5" : "test" ;

CPU test {    
  OS config {
    STATUS = STANDARD;
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "../../../..";
      APP_NAME = "trampuinoBlink";
      APP_SRC = "blink.cpp";
      CPPCOMPILER = "avr-g++";
      COMPILER = "avr-gcc";
      LINKER = "avr-gcc";
      ASSEMBLER = "avr-gcc";
      COPIER = "avr-objcopy";
      SYSTEM = PYTHON;
      LIBRARY = serial;
    };
    SYSTEM_CALL = TRUE;
  };

  APPMODE stdAppmode {};
  

  EVENT OneSecond{

		/* We put auto so that the value is computed by the compiler */
		MASK = AUTO; 
	};


  /* 
  ALARM periodicAl {
    COUNTER= SystemCounter;
    ACTION = ACTIVATETASK {
      TASK = periodicTask;
    };
    AUTOSTART = TRUE {
      ALARMTIME = 1000; //activated each 1024 ms
      CYCLETIME = 1000; //activated each 1024 ms
      APPMODE = stdAppmode;
    };
  };
  */

  /* 
  TASK periodicTask {
    PRIORITY = 20;
    AUTOSTART = FALSE;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 256;
  };
  */

  TASK SosTask {
		PRIORITY = 0x01; /* The priority has a value. In this case the value is 1 */
		SCHEDULE = FULL; /* In the FULL mode the task in preemptable */

    /* The autostart is the state that the task has when we start the OS. If we put FALSE when the OS start the task is SUSPENDED */
		AUTOSTART = TRUE{
      APPMODE = stdAppmode;
    }; 
		STACKSIZE = 256;
		ACTIVATION = 1; /* This is the maximum memorized activations */
		EVENT = OneSecond;
	};


  ALARM one_second {
		COUNTER = SystemCounter; /* This is the counter which the alarm refers to */
		ACTION = SETEVENT { /* Task to be activated due to the alarm */
			TASK = SosTask;
			EVENT = OneSecond;
		};
		AUTOSTART = TRUE { 
			
			/* The alarm is triggered the first time when the counter reach value 1 */
			ALARMTIME = 976; 
			CYCLETIME = 976; 

      APPMODE = stdAppmode;

		};
	};




};
